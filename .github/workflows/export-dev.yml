name: Export Power Platform Solution from Dev

on:
  workflow_dispatch:

jobs:
  export-solution:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install PAC CLI via .NET Tool
      shell: powershell
      run: |
        dotnet tool install --global Microsoft.PowerApps.CLI.Tool
        $env:PATH += ";$env:USERPROFILE\.dotnet\tools"
    - name: Authenticate to Dev
      shell: powershell
      run: |
        $envUrl = '${{ secrets.DEV_ENV_URL }}'
        $appId = '${{ secrets.CLIENT_ID }}'
        $clientSecret = '${{ secrets.CLIENT_SECRET }}'
        $tenantId = '${{ secrets.TENANT_ID }}'
        $pacPath = "$env:USERPROFILE\.dotnet\tools\pac.exe"
        & $pacPath auth create `
          --applicationId $appId `
          --clientSecret $clientSecret `
          --tenant $tenantId `
          --environment $envUrl
    - name: Export solution from Dev
      shell: powershell
      run: |
        $pacPath = "$env:USERPROFILE\.dotnet\tools\pac.exe"
        & $pacPath solution export `
          --name "D365LightQuotingSystem" `
          --path "solution.zip" `
          --managed false `
          --overwrite
    - name: Authenticate to Staging
      shell: powershell
      run: |
        $envUrl = '${{ secrets.STAGING_ENV_URL }}'
        $appId = '${{ secrets.CLIENT_ID }}'
        $clientSecret = '${{ secrets.CLIENT_SECRET }}'
        $tenantId = '${{ secrets.TENANT_ID }}'
        $pacPath = "$env:USERPROFILE\.dotnet\tools\pac.exe"
        & $pacPath auth create `
          --applicationId $appId `
          --clientSecret $clientSecret `
          --tenant $tenantId `
          --environment $envUrl
    - name: Import solution into Staging
      shell: powershell
      run: |
        $pacPath = "$env:USERPROFILE\.dotnet\tools\pac.exe"
        & $pacPath solution import `
          --path "solution.zip" `
          --force-overwrite `
          --publish-changes
